name: Matrix Scraper

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  scrape:
    name: Scrape
    runs-on: ubuntu-latest
    continue-on-error: true # go ahead and allow the next thing to happen which is commit 
    strategy:
      fail-fast: false # related to individual versions of scrape if ca fails keep do ia
      matrix:
        state: [ca, ia, ny]
    steps:
      - name: Hello world
        run: echo "Scraping data for ${{ matrix.state }}"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Scraper
        run: pip install warn-scraper

      - name: Scrape
        run: warn-scraper ${{ matrix.state }} --data-dir ./data/

      - name: Upload Artifact
        uses: actions/upload-artifact@v4    # provided by Github to store temporarily between jobs
        with:
          name: ${{ matrix.state }}
          path: ./data/${{ matrix.state }}.csv

  commit:
    name: Commit
    runs-on: ubuntu-latest
    needs: scrape            # we need to wait for scrape job to finish before we do it
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          pattern: '*'    # everything in computer speak
          path: artifacts/
          
      - name: Move       # unpacks artifact which are all stored in own folders and puts them together
        run: |           # allows to do multi line commands
          mkdir data -p  # making directory 
          mv artifacts/**/*.csv data/    # moving data from subdirectories and move into higher up folder
                                         # glob pattern

      - name: Save datestamp
        run: date > ./data/latest-scrape.txt 

      - name: Commit and push
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@users.noreply.github.com"
          git add ./data/
          git commit -m "Latest data" && git push || true
    
